Spotify Recommender Project by David Ahn, Tony An, Nathaniel Lao

This project is a Spotify Recommender that recommends artists and playlists given the needs and wants
of a user by taking that user's Spotify data. 

We addressed the following categories:

Advanced Topics: Recommendations in social networks
Social Networks: We looked through the relationships between users and their favorite artists as well
as those favorite artists' related artists to optimally recommend new artists to a user (triadic closure).
Document Search/Similarity Measures: We used Jaccard similarity which is a similar alternate to cosine 
similarity to recommend playlists to user.


In this project, Nathaniel handled the recommendation algorithm for artists (Recommender.java) as well as the Java server 
necessary to link the user's Spotify account to our program.

Tony worked with the user interface (Main.java) so that requests for particular genres of music/playlists could be
requested.

David worked on the playlist recommendation algorithms (PlaylistSimilarity.java) as well, using Jaccard Similarity 
to recommend playlists either within a genre specified by the user, or from the current group of featured playlists.

Initially, we wanted to create a Facebook friend recommender using the Facebook API, and wrote our project 
proposal on this. However, after speaking to our TA, we realized that this would be difficult given the
uninformative and obscure nature of the Facebook API.

Thus, we decided to use the Spotify API (which unfortunately wasn't much easier to use) to implement a Spotify
Recommender that flexibly recommends artists, playlists, etc... to a user. We discussed maybe representing the
data in graph structure but found that the Spotify API did not offer much functionality for information on 
followers and interactions/connections between artists and users.
